using Igor.UE4.Model;

namespace Igor.UE4.Render
{
    public class UeCppRenderer : UeRenderer
    {
        public string FileHeader =>
                $@"Author: Igor compiler
Compiler version: {Version.HeaderVersionString}
DO NOT EDIT THIS FILE - it is machine generated";

        public void WriteFile(UeCppFile file)
        {
            Comment(FileHeader, "// ");
            EmptyLine();
            Blocks(file.Includes, inc => $@"#include ""{inc}""");
            EmptyLine();
            GenerateNamespace(file.DefaultNamespace);
            ForEach(file.Namespaces, GenerateNamespace, emptyLineDelimiter: true);
        }

        private void GenerateNamespace(UeNamespace ns)
        {
            if (ns.Name != null)
            {
                Line($@"namespace {ns.Name}");
                Line("{");
                Indent();
            }
            Blocks(ns.Definitions, emptyLineDelimiter: true);
            if (ns.Name != null)
            {
                Outdent();
                Line("}");
            }
        }

        public static string Render(UeCppFile file)
        {
            var renderer = new UeCppRenderer();
            renderer.WriteFile(file);
            return UePostprocess.Postprocess(renderer.Build());
        }
    }
}
